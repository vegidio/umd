version: '3'

tasks:
  clean:
    desc: Clean the build directory
    cmds:
      - rm -rf {{.ROOT_DIR}}/build/*

  # CLI build tasks
  cli:
    desc: Build the CLI version of the app
    dir: cli
    requires:
      vars: [ os, arch ]
    vars:
      file: "{{if eq .os `windows`}}umd-dl.exe{{else}}umd-dl{{end}}"
    env:
      CGO_ENABLED: 0
      GOOS: "{{.os}}"
      GOARCH: "{{.arch}}"
    cmds:
      - |
        go build -o "{{.ROOT_DIR}}/build/{{.file}}"
        {{if .isPackage}}7z a -tzip -mx=9 "{{.ROOT_DIR}}/build/umd-cli_{{.os}}_{{.arch}}.zip" "{{.ROOT_DIR}}/build/{{.file}}"{{end}}

  # GUI build tasks
  gui:
    desc: Build the GUI version of the app
    dir: gui
    requires:
      vars: [ os, arch ]
    vars:
      file: "{{if eq .os `darwin`}}UMD.app{{else}}{{if eq .os `windows`}}umd.exe{{else}}umd{{end}}{{end}}"
    cmds:
      - |
        wails build -platform {{.os}}/{{.arch}} {{if eq .os `linux`}}-tags "webkit2_41"{{end}}
        rm -rf "{{.ROOT_DIR}}/build/{{.file}}"
        mkdir -p "{{.ROOT_DIR}}/build"
        mv "build/bin/{{.file}}" "{{.ROOT_DIR}}/build/{{.file}}"
        {{if .isPackage}}7z a -tzip -mx=9 "{{.ROOT_DIR}}/build/umd-gui_{{.os}}_{{.arch}}.zip" "{{.ROOT_DIR}}/build/{{.file}}"{{end}}

  package:
    desc: Build and pack in .zip files
    requires:
      vars: [ oses, archs ]
    cmds:
      - |
        for os in {{.oses}}; do
          for arch in {{.archs}}; do
            task gui os=$os arch=$arch isPackage=true
            task cli os=$os arch=$arch isPackage=true
          done
        done