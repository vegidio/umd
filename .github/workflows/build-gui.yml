name: build

on:
  push:
    tags:
      - '*'

env:
  BINARY_NAME: umd

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.vars.outputs.VERSION }}
    steps:
      # The `fetch-depth: 0` is important to fetch all the tags
      - name: Code checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set version
        id: vars
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

  build-linux-windows:
    runs-on: ubuntu-latest
    env:
      VITE_MUI_LICENSE: ${{ secrets.VITE_MUI_LICENSE }}
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Install Wails
        run: |
          go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Install dependencies
        run: |
          sudo apt-get install -y build-essential libgtk-3-dev libwebkit2gtk-4.0-dev libsoup-3.0-dev

      - name: Build Linux binaries
        working-directory: gui
        run: |
          mkdir $GITHUB_WORKSPACE/builds
          wails build -platform linux/amd64
          zip -j -9 $GITHUB_WORKSPACE/builds/umd_linux_amd64.zip build/bin/umd

      - name: Build Windows binaries
        working-directory: gui
        run: |
          wails build -platform windows/amd64
          zip -j -9 $GITHUB_WORKSPACE/builds/umd_windows_amd64.zip build/bin/umd.exe

          wails build -platform windows/arm64
          zip -j -9 $GITHUB_WORKSPACE/builds/umd_windows_arm64.zip build/bin/umd.exe

      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-linux-windows
          path: builds/*.zip

  build-macos:
    runs-on: macos-latest
    env:
      VITE_MUI_LICENSE: ${{ secrets.VITE_MUI_LICENSE }}
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Install Wails
        run: |
          go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Build MacOS binaries
        working-directory: gui
        run: |
          mkdir $GITHUB_WORKSPACE/builds

          wails build -platform darwin/arm64
          cd build/bin
          zip -r -9 $GITHUB_WORKSPACE/builds/umd_macos_arm64.zip UMD.app

          cd ../..
          wails build -platform darwin/amd64
          cd build/bin
          zip -r -9 $GITHUB_WORKSPACE/builds/umd_macos_amd64.zip UMD.app

      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-macos
          path: builds/*.zip

  release:
    runs-on: ubuntu-latest
    needs: [version, build-linux-windows, build-macos]
    permissions:
      contents: write
    steps:
      # The `fetch-depth: 0` is important to fetch all the tags
      - name: Code checkout
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Fetch artifact
        uses: actions/download-artifact@v4
        with:
          path: binaries
          merge-multiple: true

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Create the changelog
        run: |
          pnpm install -g release-it @release-it/conventional-changelog
          release-it --ci

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ needs.version.outputs.VERSION }}
          tag: ${{ needs.version.outputs.VERSION }}
          bodyFile: CHANGELOG.md
          replacesArtifacts: true
          artifacts: binaries/*.zip