name: build

on:
  push:
    tags:
      - '*'

env:
  BINARY_NAME: umd

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.vars.outputs.VERSION }}
    steps:
      # The `fetch-depth: 0` is important to fetch all the tags
      - name: Code checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set version
        id: vars
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

  build-linux-amd64:
    runs-on: ubuntu-latest
    needs: [version]
    env:
      VITE_MUI_LICENSE: ${{ secrets.VITE_MUI_LICENSE }}
    steps:
      - name: Code checkout
        uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Install Wails
        run: |
          go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential libgtk-3-dev libwebkit2gtk-4.1-dev libsoup-3.0-dev
          pnpm install -g @go-task/cli

      - name: Build Linux binaries
        run: |
          node scripts/replace.mjs shared/telemetry.go "<version>=>${{ needs.version.outputs.VERSION }}"
          task package oses=linux archs=amd64

      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-linux
          path: build/*.zip

  build-linux-arm64:
    runs-on: ubuntu-24.04-arm
    needs: [version]
    env:
      VITE_MUI_LICENSE: ${{ secrets.VITE_MUI_LICENSE }}
    steps:
      - name: Code checkout
        uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Install Wails
        run: |
          go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential libgtk-3-dev libwebkit2gtk-4.1-dev libsoup-3.0-dev
          pnpm install -g @go-task/cli

      - name: Build Linux binaries
        run: |
          node scripts/replace.mjs shared/telemetry.go "<version>=>${{ needs.version.outputs.VERSION }}"
          task package oses=linux archs=arm64

      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-linux-arm64
          path: build/*.zip

  build-macos:
    runs-on: macos-latest
    needs: [version]
    env:
      VITE_MUI_LICENSE: ${{ secrets.VITE_MUI_LICENSE }}
    steps:
      - name: Code checkout
        uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Install Wails
        run: |
          go install github.com/wailsapp/wails/v2/cmd/wails@latest
          pnpm install -g @go-task/cli

      - name: Build MacOS binaries
        run: |
          node scripts/replace.mjs shared/telemetry.go "<version>=>${{ needs.version.outputs.VERSION }}"
          task package oses=darwin archs='amd64 arm64'

      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-macos
          path: build/*.zip

  build-windows-amd64:
    runs-on: windows-latest
    needs: [version]
    env:
      VITE_MUI_LICENSE: ${{ secrets.VITE_MUI_LICENSE }}
    steps:
      - name: Code checkout
        uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Install Wails
        run: |
          go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Install dependencies
        run: |
          pnpm install -g @go-task/cli

      - name: Build Windows binaries
        run: |
          node scripts/replace.mjs shared/telemetry.go "<version>=>${{ needs.version.outputs.VERSION }}"
          task package oses=windows archs=amd64

      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-windows-amd64
          path: build/*.zip

  build-windows-arm64:
    runs-on: windows-11-arm
    needs: [version]
    env:
      VITE_MUI_LICENSE: ${{ secrets.VITE_MUI_LICENSE }}
    steps:
      - name: Code checkout
        uses: actions/checkout@v5

      - name: Install MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: CLANGARM64
          update: true
          install: |
            mingw-w64-clang-aarch64-gcc-compat

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Install Wails
        run: |
          go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Install dependencies
        run: |
          pnpm install -g @go-task/cli

      - name: Build Windows binaries
        shell: msys2 {0}
        env:
          MSYS2_PATH_TYPE: inherit
          MSYSTEM: CLANGARM64
          CC: aarch64-w64-mingw32-gcc
          CXX: aarch64-w64-mingw32-g++
        run: |
          node scripts/replace.mjs shared/telemetry.go "<version>=>${{ needs.version.outputs.VERSION }}"
          task package oses=windows archs=arm64

      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-windows-arm64
          path: build/*.zip

  release:
    runs-on: ubuntu-latest
    needs: [build-linux-arm64, build-linux-amd64, build-macos, build-windows-amd64, build-windows-arm64]
    permissions:
      contents: write
    steps:
      # The `fetch-depth: 0` is important to fetch all the tags
      - name: Code checkout
        uses: actions/checkout@v5
        with:
          ref: main
          fetch-depth: 0

      - name: Fetch artifact
        uses: actions/download-artifact@v4
        with:
          path: binaries
          merge-multiple: true

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Create the changelog
        run: |
          pnpm install -g release-it @release-it/conventional-changelog
          release-it --ci

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ needs.version.outputs.VERSION }}
          tag: ${{ needs.version.outputs.VERSION }}
          bodyFile: CHANGELOG.md
          replacesArtifacts: true
          artifacts: binaries/*.zip